<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="7a26ce05-f487-48f2-a87d-0c30515035b0" activeEnvironment="Default" name="REST Project 2" resourceRoot="" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="d61b6daf-498f-49fa-a741-1bde1af19ed1" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:8080" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://192.168.1.130:8000/clasify</con:endpoint><con:endpoint>http://DESKTOP-5JJIR34:8089/</con:endpoint></con:endpoints><con:resource name="MusicClasifier" path="/clasify/" id="bdc27357-75ef-41d2-95f7-91e3b01351c1"><con:settings/><con:parameters/><con:method name="Method 1" id="0300f0dd-f2a3-4c9b-818e-bf41c21437b2" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200 201</con:status><con:params/><con:element xmlns:mus="http://localhost/MusicClasifier">mus:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>400 500 404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:mus="http://localhost/MusicClasifier">mus:Fault</con:element></con:representation><con:request name="Request 1" id="2be02e0e-4e1d-449a-8e55-931818a4605f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.1.130:8443/</con:endpoint><con:request>{
    "songGenre": "Drum and bass",
    "songName": "The island"
}
</con:request><con:originalUri>http://localhost/MusicClasifier</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:restMockService id="4d91ccb4-b8a5-4eca-8822-b0b4837ef69f" port="8080" path="/" host="DESKTOP-5JJIR34" name="REST MockService 1" docroot=""><con:settings/><con:properties/><con:restMockAction name="/MusicClasifier" method="POST" resourcePath="/clasify" id="3352403b-b965-40a2-8f02-ee2b401ab2df"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="bb1d9fc9-6abe-4a4a-b36d-d053aa6d81aa" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"BigRoom",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 2" id="2d2e7a29-b399-4db7-a142-372a9b909af7" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"Breaks",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 3" id="517e8db5-25bc-4b99-a3cd-d92b1295e231" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"Dance",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 4" id="5ad74a79-9516-4b04-a304-102b33c005d5" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"DeepHouse",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 5" id="d192c9d9-b937-4ed5-b85a-cf926e34cece" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"DrumAndBass",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 6" id="196a938a-37cd-4c2a-9022-0f052ca669a7" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"Dubstep",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 7" id="9ee1200b-0c6c-40c2-80a6-3981cd372789" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"ElectroHouse",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 8" id="692d195b-9905-49f3-8e9b-aa31e53bd761" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"ElectronicaDowntempo",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 9" id="ff120d2a-35fd-48bd-abc7-869e246a7d08" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"FunkRAndB",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 10" id="226f698a-6d86-4c3c-8fed-a51abe4648f6" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"FutureHouse",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 11" id="ce3597c2-8651-485b-879c-04b928055df2" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"GlitchHop",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 12" id="a1bb8d67-608e-4170-8ded-677663e2769f" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"HardcoreHardTechno",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 13" id="b8c23000-47eb-4cee-928a-79dcc613fb20" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"HardDance",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 14" id="26065175-2448-4e8f-a0f5-3662b15513d3" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"HipHop",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 15" id="3d7be422-98c5-48d2-8a26-950c54a86f8f" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"House",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 16" id="cb718f2e-168d-4ffb-af85-2db76742d4ac" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"IndieDanceNuDusco",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 17" id="5ef3ce42-5ae6-4fec-a086-b9c231b7c4dc" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"Minimal",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 18" id="02ce0a67-75a9-498c-a123-6af7fe72992f" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"ProgresiveHouse",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 19" id="3a482264-7c15-4f0b-9f66-9558b0997a65" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"PsyTrance",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 20" id="392957ac-87b6-4684-9ebb-4801d7d394dd" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"ReggaeDub",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 21" id="4decc693-2948-40cd-92d0-69e1fd043871" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"TechHouse",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 22" id="ea7e956b-cc01-424e-8f8d-369ecb51419f" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"Techno",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 23" id="bd1719fc-f600-450b-a285-d848b60552ce" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"Trance",
	"songName":"The island"
}</con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>