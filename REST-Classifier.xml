<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="REST Project 2" abortOnError="false" activeEnvironment="Default" id="7a26ce05-f487-48f2-a87d-0c30515035b0" resourceRoot="" runType="SEQUENTIAL" soapui-version="5.4.0" xmlns:con="http://eviware.com/soapui/config">
    <con:settings/>
    <con:interface name="http://localhost:8080" id="d61b6daf-498f-49fa-a741-1bde1af19ed1" type="rest" wadlVersion="http://wadl.dev.java.net/2009/02" xsi:type="con:RestService" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:settings/>
        <con:definitionCache rootPart="" type="TEXT"/>
        <con:endpoints>
            <con:endpoint>http://DESKTOP-5JJIR34:8089/</con:endpoint>
            <con:endpoint>http://localhost:8081/</con:endpoint>
        </con:endpoints>
        <con:resource name="MusicClasifier" id="bdc27357-75ef-41d2-95f7-91e3b01351c1" path="/classifier/clasifygenre/">
            <con:settings/>
            <con:parameters/>
            <con:method name="Method 1" id="0300f0dd-f2a3-4c9b-818e-bf41c21437b2" method="POST">
                <con:settings/>
                <con:parameters/>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="REQUEST">
                    <con:mediaType>application/json</con:mediaType>
                    <con:params/>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType>application/xml</con:mediaType>
                    <con:status>200</con:status>
                    <con:params/>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType>application/json</con:mediaType>
                    <con:status>200 201</con:status>
                    <con:params/>
                    <con:element xmlns:mus="http://localhost/MusicClasifier">mus:Response
                    </con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="FAULT">
                    <con:mediaType>text/html</con:mediaType>
                    <con:status>400 500 404</con:status>
                    <con:params/>
                    <con:element>html</con:element>
                </con:representation>
                <con:representation type="FAULT">
                    <con:mediaType>application/json</con:mediaType>
                    <con:status>400</con:status>
                    <con:params/>
                    <con:element xmlns:mus="http://localhost/MusicClasifier">mus:Fault</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType>text/html; charset=iso-8859-1</con:mediaType>
                    <con:status>200</con:status>
                    <con:params/>
                    <con:element>html</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:request name="Request wUser/Picked" id="e9f6bbf4-de8c-4a9d-83e3-d336b5977906" mediaType="application/json" postQueryString="false">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">
                            &lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://localhost:8081/</con:endpoint>
                    <con:request>{
                        "classifyRequest":{
                        "songInfo": {
                        "sampleType": "AUDIO_PICKED",
                        "songName":"The island",
                        "sampleTime": 180000,
                        "songData":"AAAAGGZ0eXAzZ3A0AAAAAGlzb20zZ3A0AAAC+G1vb3YAAABsbXZoZAAAAADVcGWe1XBlngAAA+gA\nAAIIAAEAAAEAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAQAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAB3bWV0YQAAACFoZGxyAAAAAAAAAABtZHRhAAAA\nAAAAAAAAAAAAAAAAACtrZXlzAAAAAAAAAAEAAAAbbWR0YWNvbS5hbmRyb2lkLnZlcnNpb24AAAAj\naWxzdAAAABsAAAABAAAAE2RhdGEAAAABAAAAADcuMAAAAg10cmFrAAAAXHRraGQAAAAH1XBlntVw\nZZ4AAAABAAAAAAAAAggAAAAAAAAAAAAAAAABAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAA\nAAAAAABAAAAAAAAAAAAAAAAAAAGpbWRpYQAAACBtZGhkAAAAANVwZZ7VcGWeAAAfQAAAEEAAAAAA\nAAAALGhkbHIAAAAAAAAAAHNvdW4AAAAAAAAAAAAAAABTb3VuZEhhbmRsZQAAAAFVbWluZgAAABBz\nbWhkAAAAAAAAAAAAAAAkZGluZgAAABxkcmVmAAAAAAAAAAEAAAAMdXJsIAAAAAEAAAEZc3RibAAA\nAEVzdHNkAAAAAAAAAAEAAAA1c2FtcgAAAAAAAAABAAAAAAAAAAAAAQAQAAAAAB9AAAAAAAARZGFt\nciAgIAAAg/8AAQAAACBzdHRzAAAAAAAAAAIAAAABAAAAoAAAABkAAACgAAAAfHN0c3oAAAAAAAAA\nAAAAABoAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAg\nAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAABxz\ndHNjAAAAAAAAAAEAAAABAAAAGgAAAAEAAAAUc3RjbwAAAAAAAAABAAAMmQAACYFmcmVlAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0htZGF0PAi4WIiaY4PISoJ/wgABUUAAbzD3mqN8\nAAArVlZCpRA8UkIlPKjIS+F5iPdXT3JrTctgC461tx9PS86UDLIPMDwaNi1GqaqH4N7Tz3j+tdiB\nRxf8jo0+dW6LsjwkI1JAPDrHbI/6lC0B7Md+iXaBhPR9hW+LLemYsuFp++pXJQA8IEt2j98tH2Hl\nkDpP58iSjaHTiVqTRMv3Z0W6OxtY8Dw+XC+z/ciHAeuSOR6x2p2lQscjmHWO1/6AoT3JvfhAPB5S\nhbffLAlh9ta41aik0OKQHxFll9SUMgqB0WIJ1BA8YEIw/3eOH4HvlV+8aNLqf53KHdGWvkg6U7D2\npPtC8DzgU2yeUEwQ4f2CeEfoIXlT9QUMzMgdzeejElWxvRIAPGRSMvvyCh4B/sBaAwJKuUnvCSzu\n40SZjQbw8+OJLgA84DZYNzP6Q6HtNtm7LjOjjFgR37vrCYB/XIuJVBV50DxWVC9GAxAcZbNwWQTd\n3PqpLdNYxFzSsk6yTV7ZmsuAPN5UWD//jYDh7yoebTWuRNYbMjbDfZz5uueIro6mq2A8SlNwP/+S\nMOPYevoWVucavivrA4UEEjbGRkf1rsGVwDzeVFo//4UCwf+imQe5hKqgnAuA2AZQ+ZtOzME05iqg\nPEQ+h6//hhah/sEKIlZ/HFDMVmD1yFx0+rDv4Y6yYVA8HmNzP/3AWaH/hloPit8mgjQkPgSUTFcH\nkajetpwr0DwOs3uJhoEDsOd+yXWfexy4z5Y48AtM9EWfGhB4KYbAPCxLdEScOLDJZkk/+yGNZ2Ng\nBaViC+AJp1QJYG7PX7A8FjN4Mw0OEuH+Pdqsu3jmrKp5ZzwTgM8WdVw3b27X0DwicXtGHMgp4fyT\nvv+sXlrM9n9+Vdql/iKlwBxykoiwPCS6YUQWghLQ7vIohXchqPe14a8E8CM4iJBv5RSMBAA8GlWj\nhhgpAuH3wrl2r+KYix2P+013Mz4IMSTxouVP4DwgaSVEOGAY0O+Kp0PZlNiBqnLecdPad7AIsA1i\naHrwPNg9bZJYlhhh/4oPTvYTFLDx/ctI6mkgHUFBGx3LKuA8JGd4Oq6eEMl2XtmQRXR9gLgh0+J4\nm4ms+agVPLNf8A=="
                        },
                        "user": {
                        "userLogged": true,
                        "clientId": "aaaaaaaaabbbbbbbcccccccccc"
                        },
                        "date" : 1524161523
                        }
                        }
                    </con:request>
                    <con:originalUri>http://192.168.1.130/clasify/clasify</con:originalUri>
                    <con:credentials>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:request>
                <con:request name="Request woUser\Recorded" id="e9f6bbf4-de8c-4a9d-83e3-d336b5977906" mediaType="application/json" postQueryString="false">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">
                            &lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://localhost:8081/</con:endpoint>
                    <con:request>{
                        "classifyRequest":{
                        "songInfo": {
                        "sampleType": "AUDIO_RECORDED" ,
                        "sampleTime": 12000,
                        "songName":null,
                        "songData":"AAAAGGZ0eXAzZ3A0AAAAAGlzb20zZ3A0AAAC+G1vb3YAAABsbXZoZAAAAADVcGWe1XBlngAAA+gA\nAAIIAAEAAAEAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAQAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAB3bWV0YQAAACFoZGxyAAAAAAAAAABtZHRhAAAA\nAAAAAAAAAAAAAAAAACtrZXlzAAAAAAAAAAEAAAAbbWR0YWNvbS5hbmRyb2lkLnZlcnNpb24AAAAj\naWxzdAAAABsAAAABAAAAE2RhdGEAAAABAAAAADcuMAAAAg10cmFrAAAAXHRraGQAAAAH1XBlntVw\nZZ4AAAABAAAAAAAAAggAAAAAAAAAAAAAAAABAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAA\nAAAAAABAAAAAAAAAAAAAAAAAAAGpbWRpYQAAACBtZGhkAAAAANVwZZ7VcGWeAAAfQAAAEEAAAAAA\nAAAALGhkbHIAAAAAAAAAAHNvdW4AAAAAAAAAAAAAAABTb3VuZEhhbmRsZQAAAAFVbWluZgAAABBz\nbWhkAAAAAAAAAAAAAAAkZGluZgAAABxkcmVmAAAAAAAAAAEAAAAMdXJsIAAAAAEAAAEZc3RibAAA\nAEVzdHNkAAAAAAAAAAEAAAA1c2FtcgAAAAAAAAABAAAAAAAAAAAAAQAQAAAAAB9AAAAAAAARZGFt\nciAgIAAAg/8AAQAAACBzdHRzAAAAAAAAAAIAAAABAAAAoAAAABkAAACgAAAAfHN0c3oAAAAAAAAA\nAAAAABoAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAg\nAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAABxz\ndHNjAAAAAAAAAAEAAAABAAAAGgAAAAEAAAAUc3RjbwAAAAAAAAABAAAMmQAACYFmcmVlAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0htZGF0PAi4WIiaY4PISoJ/wgABUUAAbzD3mqN8\nAAArVlZCpRA8UkIlPKjIS+F5iPdXT3JrTctgC461tx9PS86UDLIPMDwaNi1GqaqH4N7Tz3j+tdiB\nRxf8jo0+dW6LsjwkI1JAPDrHbI/6lC0B7Md+iXaBhPR9hW+LLemYsuFp++pXJQA8IEt2j98tH2Hl\nkDpP58iSjaHTiVqTRMv3Z0W6OxtY8Dw+XC+z/ciHAeuSOR6x2p2lQscjmHWO1/6AoT3JvfhAPB5S\nhbffLAlh9ta41aik0OKQHxFll9SUMgqB0WIJ1BA8YEIw/3eOH4HvlV+8aNLqf53KHdGWvkg6U7D2\npPtC8DzgU2yeUEwQ4f2CeEfoIXlT9QUMzMgdzeejElWxvRIAPGRSMvvyCh4B/sBaAwJKuUnvCSzu\n40SZjQbw8+OJLgA84DZYNzP6Q6HtNtm7LjOjjFgR37vrCYB/XIuJVBV50DxWVC9GAxAcZbNwWQTd\n3PqpLdNYxFzSsk6yTV7ZmsuAPN5UWD//jYDh7yoebTWuRNYbMjbDfZz5uueIro6mq2A8SlNwP/+S\nMOPYevoWVucavivrA4UEEjbGRkf1rsGVwDzeVFo//4UCwf+imQe5hKqgnAuA2AZQ+ZtOzME05iqg\nPEQ+h6//hhah/sEKIlZ/HFDMVmD1yFx0+rDv4Y6yYVA8HmNzP/3AWaH/hloPit8mgjQkPgSUTFcH\nkajetpwr0DwOs3uJhoEDsOd+yXWfexy4z5Y48AtM9EWfGhB4KYbAPCxLdEScOLDJZkk/+yGNZ2Ng\nBaViC+AJp1QJYG7PX7A8FjN4Mw0OEuH+Pdqsu3jmrKp5ZzwTgM8WdVw3b27X0DwicXtGHMgp4fyT\nvv+sXlrM9n9+Vdql/iKlwBxykoiwPCS6YUQWghLQ7vIohXchqPe14a8E8CM4iJBv5RSMBAA8GlWj\nhhgpAuH3wrl2r+KYix2P+013Mz4IMSTxouVP4DwgaSVEOGAY0O+Kp0PZlNiBqnLecdPad7AIsA1i\naHrwPNg9bZJYlhhh/4oPTvYTFLDx/ctI6mkgHUFBGx3LKuA8JGd4Oq6eEMl2XtmQRXR9gLgh0+J4\nm4ms+agVPLNf8A=="
                        },
                        "user": {
                        "userLogged": false,
                        "clientId": null
                        },
                        "date" : 1524161523
                        }
                        }
                    </con:request>
                    <con:originalUri>http://192.168.1.130/clasify/clasify</con:originalUri>
                    <con:credentials>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:request>
            </con:method>
        </con:resource>
        <con:resource name="UserStats" id="37da020a-b4db-44d4-ad24-219934bc9e96" path="/classifier/stats/">
            <con:settings/>
            <con:parameters>
                <con:parameter>
                    <con:name>userID</con:name>
                    <con:value/>
                    <con:style>QUERY</con:style>
                    <con:default/>
                    <con:description xsi:nil="true"/>
                </con:parameter>
            </con:parameters>
            <con:method name="Method 1" id="6b485520-a0c3-4158-824b-7a007b3d2a2d" method="GET">
                <con:settings/>
                <con:parameters/>
                <con:representation type="FAULT">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>404</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:request name="Request 1" id="c8103c6c-974e-488b-80b8-05737fadc38e" mediaType="application/json">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">
                            &lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://localhost:8081/</con:endpoint>
                    <con:request/>
                    <con:originalUri>http://localhost/classifier/stats/</con:originalUri>
                    <con:credentials>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters>
                        <entry key="userID" value="11223344556677" xmlns="http://eviware.com/soapui/config"/>
                    </con:parameters>
                    <con:parameterOrder>
                        <con:entry>userID</con:entry>
                    </con:parameterOrder>
                </con:request>
            </con:method>
        </con:resource>
    </con:interface>
    <con:restMockService name="REST MockService 1" docroot="" host="DESKTOP-5JJIR34" id="4d91ccb4-b8a5-4eca-8822-b0b4837ef69f" path="/" port="8081">
        <con:settings/>
        <con:properties/>
        <con:restMockAction name="/MusicClasifier" id="3352403b-b965-40a2-8f02-ee2b401ab2df" method="POST" resourcePath="/classifier/clasifygenre/">
            <con:settings/>
            <con:defaultResponse>Response 1</con:defaultResponse>
            <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
            <con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="bb1d9fc9-6abe-4a4a-b36d-d053aa6d81aa" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
            "classifyResponse":{
            "genres": [
            { "songGenre":"BigRoom", "precision": 0.99},
            { "songGenre":"BigRoom", "precision": 0.99},
            { "songGenre":"BigRoom", "precision": 0.99}
            ],
            "songName":"The island"
            }
            }

        </con:responseContent>
        </con:response>
            <con:response name="Response 2" httpResponseStatus="200" id="2d2e7a29-b399-4db7-a142-372a9b909af7" mediaType="application/json">
                <con:settings/>
                <con:responseContent>{
	"songGenre":"Breaks",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 3" id="517e8db5-25bc-4b99-a3cd-d92b1295e231" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"Dance",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 4" id="5ad74a79-9516-4b04-a304-102b33c005d5" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"DeepHouse",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 5" id="d192c9d9-b937-4ed5-b85a-cf926e34cece" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"DrumAndBass",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 6" id="196a938a-37cd-4c2a-9022-0f052ca669a7" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"Dubstep",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 7" id="9ee1200b-0c6c-40c2-80a6-3981cd372789" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"ElectroHouse",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 8" id="692d195b-9905-49f3-8e9b-aa31e53bd761" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"ElectronicaDowntempo",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 9" id="ff120d2a-35fd-48bd-abc7-869e246a7d08" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"FunkRAndB",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 10" id="226f698a-6d86-4c3c-8fed-a51abe4648f6" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"FutureHouse",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 11" id="ce3597c2-8651-485b-879c-04b928055df2" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"GlitchHop",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 12" id="a1bb8d67-608e-4170-8ded-677663e2769f" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"HardcoreHardTechno",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 13" id="b8c23000-47eb-4cee-928a-79dcc613fb20" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"HardDance",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 14" id="26065175-2448-4e8f-a0f5-3662b15513d3" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"HipHop",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 15" id="3d7be422-98c5-48d2-8a26-950c54a86f8f" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"House",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 16" id="cb718f2e-168d-4ffb-af85-2db76742d4ac" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"IndieDanceNuDusco",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 17" id="5ef3ce42-5ae6-4fec-a086-b9c231b7c4dc" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"Minimal",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 18" id="02ce0a67-75a9-498c-a123-6af7fe72992f" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"ProgresiveHouse",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 19" id="3a482264-7c15-4f0b-9f66-9558b0997a65" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"PsyTrance",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 20" id="392957ac-87b6-4684-9ebb-4801d7d394dd" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"ReggaeDub",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 21" id="4decc693-2948-40cd-92d0-69e1fd043871" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"TechHouse",
	"songName":"The island"
}</con:responseContent></con:response><con:response name="Response 22" id="ea7e956b-cc01-424e-8f8d-369ecb51419f" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"songGenre":"Techno",
	"songName":"The island"
            }
        </con:responseContent>
        </con:response>
            <con:response name="Response 23" httpResponseStatus="200" id="bd1719fc-f600-450b-a285-d848b60552ce" mediaType="application/json">
                <con:settings/>
                <con:responseContent>
                    {"songData":"AAAAGGZ0eXAzZ3A0AAAAAGlzb20zZ3A0AAAC+G1vb3YAAABsbXZoZAAAAADVcGWe1XBlngAAA+gA\nAAIIAAEAAAEAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAQAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAB3bWV0YQAAACFoZGxyAAAAAAAAAABtZHRhAAAA\nAAAAAAAAAAAAAAAAACtrZXlzAAAAAAAAAAEAAAAbbWR0YWNvbS5hbmRyb2lkLnZlcnNpb24AAAAj\naWxzdAAAABsAAAABAAAAE2RhdGEAAAABAAAAADcuMAAAAg10cmFrAAAAXHRraGQAAAAH1XBlntVw\nZZ4AAAABAAAAAAAAAggAAAAAAAAAAAAAAAABAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAA\nAAAAAABAAAAAAAAAAAAAAAAAAAGpbWRpYQAAACBtZGhkAAAAANVwZZ7VcGWeAAAfQAAAEEAAAAAA\nAAAALGhkbHIAAAAAAAAAAHNvdW4AAAAAAAAAAAAAAABTb3VuZEhhbmRsZQAAAAFVbWluZgAAABBz\nbWhkAAAAAAAAAAAAAAAkZGluZgAAABxkcmVmAAAAAAAAAAEAAAAMdXJsIAAAAAEAAAEZc3RibAAA\nAEVzdHNkAAAAAAAAAAEAAAA1c2FtcgAAAAAAAAABAAAAAAAAAAAAAQAQAAAAAB9AAAAAAAARZGFt\nciAgIAAAg/8AAQAAACBzdHRzAAAAAAAAAAIAAAABAAAAoAAAABkAAACgAAAAfHN0c3oAAAAAAAAA\nAAAAABoAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAg\nAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAABxz\ndHNjAAAAAAAAAAEAAAABAAAAGgAAAAEAAAAUc3RjbwAAAAAAAAABAAAMmQAACYFmcmVlAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0htZGF0PAi4WIiaY4PISoJ/wgABUUAAbzD3mqN8\nAAArVlZCpRA8UkIlPKjIS+F5iPdXT3JrTctgC461tx9PS86UDLIPMDwaNi1GqaqH4N7Tz3j+tdiB\nRxf8jo0+dW6LsjwkI1JAPDrHbI/6lC0B7Md+iXaBhPR9hW+LLemYsuFp++pXJQA8IEt2j98tH2Hl\nkDpP58iSjaHTiVqTRMv3Z0W6OxtY8Dw+XC+z/ciHAeuSOR6x2p2lQscjmHWO1/6AoT3JvfhAPB5S\nhbffLAlh9ta41aik0OKQHxFll9SUMgqB0WIJ1BA8YEIw/3eOH4HvlV+8aNLqf53KHdGWvkg6U7D2\npPtC8DzgU2yeUEwQ4f2CeEfoIXlT9QUMzMgdzeejElWxvRIAPGRSMvvyCh4B/sBaAwJKuUnvCSzu\n40SZjQbw8+OJLgA84DZYNzP6Q6HtNtm7LjOjjFgR37vrCYB/XIuJVBV50DxWVC9GAxAcZbNwWQTd\n3PqpLdNYxFzSsk6yTV7ZmsuAPN5UWD//jYDh7yoebTWuRNYbMjbDfZz5uueIro6mq2A8SlNwP/+S\nMOPYevoWVucavivrA4UEEjbGRkf1rsGVwDzeVFo//4UCwf+imQe5hKqgnAuA2AZQ+ZtOzME05iqg\nPEQ+h6//hhah/sEKIlZ/HFDMVmD1yFx0+rDv4Y6yYVA8HmNzP/3AWaH/hloPit8mgjQkPgSUTFcH\nkajetpwr0DwOs3uJhoEDsOd+yXWfexy4z5Y48AtM9EWfGhB4KYbAPCxLdEScOLDJZkk/+yGNZ2Ng\nBaViC+AJp1QJYG7PX7A8FjN4Mw0OEuH+Pdqsu3jmrKp5ZzwTgM8WdVw3b27X0DwicXtGHMgp4fyT\nvv+sXlrM9n9+Vdql/iKlwBxykoiwPCS6YUQWghLQ7vIohXchqPe14a8E8CM4iJBv5RSMBAA8GlWj\nhhgpAuH3wrl2r+KYix2P+013Mz4IMSTxouVP4DwgaSVEOGAY0O+Kp0PZlNiBqnLecdPad7AIsA1i\naHrwPNg9bZJYlhhh/4oPTvYTFLDx/ctI6mkgHUFBGx3LKuA8JGd4Oq6eEMl2XtmQRXR9gLgh0+J4\nm4ms+agVPLNf8A\u003d\u003d\n","songName":"The
                    island"}
                </con:responseContent>
            </con:response>
        </con:restMockAction>
        <con:restMockAction name="/classifier/stats/" id="ec3f4bd2-6aa2-4bb5-b4d7-6a1ceb274b0f" method="GET" resourcePath="/classifier/stats/">
            <con:settings/>
            <con:defaultResponse>Response Loged USer</con:defaultResponse>
            <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
            <con:dispatchPath>/*
                // Script dispatcher is used to select a response based on the incoming request.
                // Here are few examples showing how to match based on path, query param, header and
                body

                // Match based on path
                def requestPath = mockRequest.getPath()
                log.info "Path: "+ requestPath

                if( requestPath.contains("json") )
                {
                // return the name of the response you want to dispatch
                return "JSON Response"
                }


                // Match based on query parameter
                def queryString = mockRequest.getRequest().getQueryString()
                log.info "QueryString: " + queryString

                if( queryString.contains("stockholm") )
                {
                // return the name of the response you want to dispatch
                return "Response Stockholm"
                }
                else if( queryString.contains("london") )
                {
                // return the name of the response you want to dispatch
                return "Response London"
                }


                // Match based on header
                def acceptEncodingHeaderList =
                mockRequest.getRequestHeaders().get("Accept-Encoding")
                log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

                if( acceptEncodingHeaderList.contains("gzip,deflate") )
                {
                // return the name of the response you want to dispatch
                return "GZiped Response"
                }


                // Match based on body
                def requestBody = mockRequest.getRequestContent()
                log.info "Request body: " + requestBody

                if( requestBody.contains("some data") )
                {
                // return the name of the response you want to dispatch
                return "Response N"
                }
                */
            </con:dispatchPath>
            <con:response name="Response Loged USer" httpResponseStatus="200" id="be88327a-e4fe-4e74-b1cc-6ec15e198124" mediaType="application/json">
                <con:settings/>
                <con:responseContent>{         
	"statsResponse":{
	     "userId":11223344556677,
	     "classifiyStats":{
	     "avgSampleTime": 180000,
	     "avgAudioType": "PICK",
	     "avgGenre": "Dubstep",
	     "consecutiveAudioType" : "RECORD",
	     "consecutiveGenre": "HipHop"
	
	     },
	     "lastClassify":{
	     "lastGenre": "Dubstep",
	     "lastAudioType": "RECORD",
	     "lastSampleTime": 180000
	     }
     }
}</con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>